@startuml
'skinparam monochrome true
skinparam classBackgroundColor White
skinparam classArrowColor Black
skinparam classBorderColor Black
skinparam stereotypeCBackgroundColor Gray
'hide members
hide circle

class Navigator{
+ navigateToPage1(Context context):void;
+ navigateToPage2(Context context):void;
}

abstract class BaseActivity {
~ Navigator navigator;
# addFragment(int containerViewId, Fragment fragment):void;
}

class ActivityA{
}

abstract class BaseFragment {
}

class FragmentA #LightYellow{
~ PresenterA presentre;
}

interface IView{
+ showLoading():void;
+ hideLoading():void;
+ showRetry():void;
+ hideRetry():void;
+ showError():void;
+ hideError():void;
}

interface ViewA #LightYellow{
+ renderA():void;
}

abstract class BasePresenter{
+ onStart():void;
+ onResume():void;
+ onPause():void;
+ onStop():void;
+ onDestroy():void;
}

class PresenterA #LightYellow{
- ViewA view;
- UserCaseA userCase;
}

abstract class BaseUserCase{
}

class UserCaseA #LightYellow{
- RepositoryA repository;
}

interface RepositoryA{
}

Activity <|-r- BaseActivity

BaseActivity --> Navigator

BaseActivity <|-r- ActivityA

ActivityA ..> FragmentA

Fragment <|-r- BaseFragment

BaseFragment <|-r- FragmentA

ViewA --|> IView

FragmentA ..|> ViewA

BasePresenter <|.. PresenterA

PresenterA --> UserCaseA

PresenterA --> ViewA

FragmentA --> PresenterA

UserCaseA --|> BaseUserCase

UserCaseA --> RepositoryA
@enduml