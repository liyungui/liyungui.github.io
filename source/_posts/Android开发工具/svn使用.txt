1.更新： 服务器上变动了的 而你本地没有变动，需要你更新，
2.提交： 服务器上没有的，也就是你改过的东西，你需要将代码提交，其他同事更新你的代码
3.同步，是在更新提交之前做的工作，更新提交前先同步，可以知道哪些东西要提交，哪些东西要更新，哪些东西是冲突的	
	出现冲突不能提交也不能更新，只有先将冲突的文件选择用本地的文件覆盖或用服务器的文件覆盖本地后才能更新或提交，
	
4.冲突解决
	Mark as mergerd  （用本地的覆盖服务器的，用你的！）
	override and update (用服务器的覆盖本地，用服务器的！)
5.update to version
	可以选择 uptate to head revision(最新版) 或者选择某个历史版本
	
6.分支/标记-合并
	分支其实就是trunk版【主干线】的一个copy版，不过分支也是具有版本控制功能的，而且是和主干线相互独立的，
	当然，到最后我们可以通过【合并】功能，将分支合并到trunk上来，从而最后合并为一个项目
	(1)team--分支/标记，为新的分支指定 ”到URL“（就是新的分支地址，一般是在原来的基础上加上版本号区分）
		注释也可以写上分支的版本以便日后区分
	(2)tean--开发 切换到分支下进行开发(发现url发生变化)
	(3)tean--合并 切换到trunk下进行合并，将分支下进行的更改合并到trunk版里
		进行合并前最好保证两个版本都是干净的【即没有未提交或者冲突的文件存在】
		合并一个范围的版本
		起始路径：合并后保存到哪里【trunk版的路径.若需要把trunk版的改动合并到分支则相反】 
		目标路径：从哪里获取改动【这里是分支路径】
		有的时候有可能还需要选择 修订版
			（因为可能两个路径下都进行了开发，需要把代码合并到trunk建立分支时的版本号那里）
			（最好就不要在trunk进行开发，分支开发后合并到trunk）
			
7.把某个文件/文件夹 从svn中移除
	先在本地删除，然后提交整个工程。就会发现在变动中，该文件标识为减号，表示删除该文件。
	
8.svn本地文件拒绝访问错误
	无法cleanup，这是eclipse插件bug。重启eclipse即可解决