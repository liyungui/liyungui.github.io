@startuml
actor User #red
User -> Statistics: recordEvent(Event)
Statistics -> EventQueue: recordEvent(Event)
EventQueue -> StatisticsStore:  addEvent(Event)\n(用SharedPreferences存储)

Statistics -> Statistics: sendEventsIfNeeded
Statistics -> EventQueue: eventsList()\n获取事件列表
EventQueue -> StatisticsStore: eventsList()\n获取事件列表
Statistics -> Statistics: 事件列表>=10
Statistics -> EventQueue: events(List<String>)\n事件列表转换为String
EventQueue -> EventQueue: 每转换一个事件
EventQueue -> StatisticsStore: removeEvents(String)\n移除一个
Statistics -> ConnectionQueue: recordEvents(String)
ConnectionQueue -> StatisticsStore: addConnection(String)\n(用SharedPreferences存储)
ConnectionQueue -> ConnectionQueue:  executor.submit(ConnectionProcessor)\n(向线程池提交Runnable任务)
ConnectionQueue -> ConnectionProcessor
ConnectionProcessor -> ConnectionProcessor: run\n获取StatisticsStore的Connection\n轮询进行网络提交
ConnectionProcessor -> StatisticsStore: 网络提交成功\nremoveConnection(String)

Statistics -> Statistics: scheduleWithFixedDelay\n120秒
Statistics -> ConnectionQueue: 事件列表非空\nrecordEvents\n处理逻辑参考sendEventsIfNeeded
@enduml